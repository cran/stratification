
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "stratification"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('stratification')
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CochranHorganData")
> ### * CochranHorganData
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CochranHorganData
> ### Title: Populations Analyzed in Gunning and Horgan (2004) and Cochran
> ###   (1961)
> ### Aliases: Debtors UScities UScolleges USbanks
> ### Keywords: datasets
> 
> ### ** Examples
> 
> ### Reproduction of the results in Table 4 and Table 7 part 3 (case L=5) of  
> ### Gunning and Horgan (2004). The differences in the nh come from different  
> ### rounding. The more important differences observed for the cumulative  
> ### root frequency method are due to the use of different numbers of classes.
> data(Debtors)
> strata.geo(x=Debtors,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = Debtors
n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |       bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |   148.28         83.60       997.12 1054   3 0.00
stratum 2  1 |   549.67        307.76     14063.78 1267  14 0.01
stratum 3  1 |  2037.60       1008.41    163709.80  732  27 0.04
stratum 4  1 |  7553.33       3702.59   1917482.45  265  33 0.12
stratum 5  1 | 28001.00      12313.39  25748882.16   51  23 0.45
Total                                              3369 100 0.03

Total sample size: 100 
Anticipated population mean: 838.6388 
Anticipated CV: 0.03585596 
> strata.cumrootf(x=Debtors,nclass=40,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = Debtors
nclass = 40 , n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |    bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |   739        247.69      35243.4 2568  43 0.02
stratum 2  1 |  1438        998.87      37091.7  352   6 0.02
stratum 3  1 |  4234       2395.90     551589.9  315  21 0.07
stratum 4  1 | 13321       6670.43    4550350.3  118  23 0.19
stratum 5  1 | 28001      18493.31   21480150.3   16   7 0.44
Total                                           3369 100 0.03

Total sample size: 100 
Anticipated population mean: 838.6388 
Anticipated CV: 0.03738946 
> strata.LH(x=Debtors,CV=0.0360,Ls=5,alloc=c(0.5,0,0.5),takeall=1,algo="Sethi")
Given arguments:
x = Debtors
CV = 0.036 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
maxiter = 10000

Strata information:
          rh  initbh |       bh anticip. mean anticip. var   Nh nh   fh
stratum 1  1    99.0 |   349.33        146.49      7238.03 1856 13 0.01
stratum 2  1   198.0 |  1190.18        626.26     46421.46  991 17 0.02
stratum 3  1   410.0 |  3483.12       2013.98    377580.90  350 17 0.05
stratum 4  1   888.8 | 10334.93       5589.95   2955057.91  146 20 0.14
stratum 5  1 28001.0 | 28001.00      15839.62  24644840.08   26 26 1.00
Total                                                      3369 93 0.03

Total sample size: 93 
Anticipated population mean: 838.6388 
Anticipated CV: 0.03512165 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> data(UScities)
> strata.geo(x=UScities,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = UScities
n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |     bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |  18.17         14.18         7.21  364  18 0.05
stratum 2  1 |  33.01         24.55        12.82  418  28 0.07
stratum 3  1 |  59.98         43.55        46.77  130  17 0.13
stratum 4  1 | 108.98         77.67       152.91   87  20 0.23
stratum 5  1 | 199.00        153.05       569.07   39  17 0.44
Total                                            1038 100 0.10

Total sample size: 100 
Anticipated population mean: 32.57418 
Anticipated CV: 0.01445161 
> strata.cumrootf(x=UScities,nclass=40,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = UScities
nclass = 40 , n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |    bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |  19.4         14.54         8.26  393  20 0.05
stratum 2  1 |  28.8         24.02         6.30  336  15 0.04
stratum 3  1 |  52.3         38.21        44.48  165  19 0.12
stratum 4  1 |  94.6         70.90       137.07   94  19 0.20
stratum 5  1 | 199.0        141.16       947.29   50  27 0.54
Total                                           1038 100 0.10

Total sample size: 100 
Anticipated population mean: 32.57418 
Anticipated CV: 0.01488882 
> strata.LH(x=UScities,CV=0.0144,Ls=5,alloc=c(0.5,0,0.5),takeall=1,algo="Sethi")
Given arguments:
x = UScities
CV = 0.0144 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
maxiter = 10000

Strata information:
          rh initbh |     bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1     15 |  14.72         11.93         2.07  189   4 0.02
stratum 2  1     20 |  21.62         17.80         3.58  270   8 0.03
stratum 3  1     26 |  35.59         26.23        10.77  336  17 0.05
stratum 4  1     40 |  80.29         51.27       151.69  164  30 0.18
stratum 5  1    199 | 199.00        120.66      1329.19   79  79 1.00
Total                                                   1038 138 0.13

Total sample size: 138 
Anticipated population mean: 32.57418 
Anticipated CV: 0.01414471 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> data(UScolleges)
> strata.geo(x=UScolleges,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = UScolleges
n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |      bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1 |  434.00        305.13      4501.30  94   3 0.03
stratum 2  1 |  941.76        674.31     20621.59 255  15 0.06
stratum 3  1 | 2043.61       1315.09    102487.82 198  27 0.14
stratum 4  1 | 4434.60       2961.50    387698.22  74  20 0.27
stratum 5  1 | 9624.00       6749.70   2138520.32  56  35 0.62
Total                                             677 100 0.15

Total sample size: 100 
Anticipated population mean: 1563 
Anticipated CV: 0.018296 
> strata.cumrootf(x=UScolleges,nclass=40,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = UScolleges
nclass = 40 , n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |      bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1 |  671.15        448.41     19168.34 224  15 0.07
stratum 2  1 | 1377.88        955.24     31216.18 254  21 0.08
stratum 3  1 | 2791.33       1951.69    159263.61 103  19 0.18
stratum 4  1 | 5618.22       3931.69    824511.35  58  25 0.43
stratum 5  1 | 9624.00       7526.66   1235296.65  38  20 0.53
Total                                             677 100 0.15

Total sample size: 100 
Anticipated population mean: 1563 
Anticipated CV: 0.01705522 
> strata.LH(x=UScolleges,CV=0.0184,Ls=5,alloc=c(0.5,0,0.5),takeall=1,algo="Sethi")
Given arguments:
x = UScolleges
CV = 0.0184 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
maxiter = 10000

Strata information:
          rh initbh |      bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1  524.4 |  512.32        354.18      9111.04 133   4 0.03
stratum 2  1  763.4 |  869.76        673.31     10190.63 180   6 0.03
stratum 3  1 1080.6 | 1577.36       1103.98     30823.03 185  10 0.05
stratum 4  1 1977.0 | 3675.52       2314.81    293595.46 110  18 0.16
stratum 5  1 9624.0 | 9624.00       6246.14   2835174.47  69  69 1.00
Total                                                    677 107 0.16

Total sample size: 107 
Anticipated population mean: 1563 
Anticipated CV: 0.01785935 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> data(USbanks)
> strata.geo(x=USbanks,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = USbanks
n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |     bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1 | 118.59         93.92       192.23 114  13 0.11
stratum 2  1 | 200.92        147.58       429.18 116  20 0.17
stratum 3  1 | 340.39        258.03      2027.22  64  25 0.39
stratum 4  1 | 576.68        442.90      2929.73  39  18 0.46
stratum 5  1 | 978.00        788.96     16224.79  24  24 1.00
Total                                            357 100 0.28

Total sample size: 100 
Anticipated population mean: 225.6246 
Anticipated CV: 0.01071521 
> strata.cumrootf(x=USbanks,nclass=40,n=100,Ls=5,alloc=c(0.5,0,0.5))
Given arguments:
x = USbanks
nclass = 40 , n = 100 , Ls = 5
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |     bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1 | 115.35         93.05       177.82 110  12 0.11
stratum 2  1 | 183.38        142.05       260.83 109  15 0.14
stratum 3  1 | 319.43        240.01      1787.25  68  24 0.35
stratum 4  1 | 523.50        415.26      3361.67  42  21 0.50
stratum 5  1 | 978.00        752.39     21938.24  28  28 1.00
Total                                            357 100 0.28

Total sample size: 100 
Anticipated population mean: 225.6246 
Anticipated CV: 0.01040122 
> strata.LH(x=USbanks,CV=0.0110,Ls=5,alloc=c(0.5,0,0.5),takeall=1,algo="Sethi")
Given arguments:
x = USbanks
CV = 0.011 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
maxiter = 10000

Strata information:
          rh initbh |     bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1  100.0 |  99.54         84.84        81.79  70   4 0.06
stratum 2  1  131.4 | 130.83        114.40        87.71  68   4 0.06
stratum 3  1  176.0 | 189.70        149.91       252.96  85   9 0.11
stratum 4  1  318.0 | 339.31        251.83      2179.66  71  21 0.30
stratum 5  1  978.0 | 978.00        574.73     36236.80  63  63 1.00
Total                                                   357 101 0.28

Total sample size: 101 
Anticipated population mean: 225.6246 
Anticipated CV: 0.01067923 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> 
> 
> cleanEx()
> nameEx("MRTS")
> ### * MRTS
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MRTS
> ### Title: Simulated Data from the Monthly Retail Trade Survey (MRTS) of
> ###   Statistics Canada
> ### Aliases: MRTS
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # Production of results similar to those in Table 1 of Baillargeon, Rivest
> # and Ferland (2007). The results are not the same because calculations in
> # the paper were conducted on real data whereas, for confidentiality reason, 
> # the MRTS data included in the package is simulated.
> data(MRTS)
> geo<-strata.geo(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5))
> geo
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |   1081.91        648.10 7.312548e+04   25   1 0.04
stratum 2  1 |   8288.00       5212.28 3.891455e+06  587  67 0.11
stratum 3  1 |  63490.22      18932.90 1.133011e+08 1343 824 0.61
stratum 4  1 | 486367.49     116953.15 5.182641e+09   45  45 1.00
Total                                               2000 937 0.47

Total sample size: 937 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009982524 
> aRRMSE.geo<-var.strata(geo,model="loglinear",
+             model.control=list(beta=0.9,sig2=0.015,ph=c(0.8,0.9,0.95,1)))
> aRRMSE.geo$RRMSE
[1] 0.01117646
> plot(geo,logscale=TRUE)
> # The geometric method does not perform well because of some small units
> 
> cumrootf<-strata.cumrootf(x=MRTS,nclass=500,CV=0.01,Ls=4,alloc=c(0.5,0,0.5))
> cumrootf
Given arguments:
x = MRTS
nclass = 500 , CV = 0.01 , Ls = 4
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |   9865.74       5890.56      6376633  778  87 0.11
stratum 2  1 |  19590.24      14144.66      7508233  742  90 0.12
stratum 3  1 |  40984.15      26480.44     31329795  355  88 0.25
stratum 4  1 | 486367.49      74294.75   2916366192  125 125 1.00
Total                                               2000 390 0.20

Total sample size: 390 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009977894 
> aRRMSE.cum<-var.strata(cumrootf,,rh=c(0.85,0.9,0.9,1),model="loglinear",
+             model.control=list(beta=0.9,sig2=0.015,ph=c(0.8,0.9,0.95,1)))
> aRRMSE.cum$RRMSE
[1] 0.01923083
> 
> LH<-strata.LH(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takeall=1,algo="Sethi")
> LH
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
maxiter = 10000

Strata information:
          rh    initbh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1   7223.01 |   9539.62       5738.24      6030413  748  73 0.10
stratum 2  1  12185.72 |  17724.40      13284.78      5507420  671  62 0.09
stratum 3  1  19153.15 |  33317.38      23084.27     16895087  402  65 0.16
stratum 4  1 486367.49 | 486367.49      63013.60   2332496583  179 179 1.00
Total                                                         2000 379 0.19

Total sample size: 379 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009965275 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> aRRMSE.LH<-var.strata(LH,rh=c(0.85,0.9,0.9,1),model="loglinear",
+            model.control=list(beta=0.9,sig2=0.015,ph=c(0.8,0.9,0.95,1)))
> aRRMSE.LH$RRMSE
[1] 0.02021776
> 
> LH.full<-strata.LH(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takeall=1,
+            algo="Sethi",rh=c(0.85,0.9,0.9,1),model="loglinear",
+            model.control=list(beta=0.9,sig2=0.015,ph=c(0.8,0.9,0.95,1)))
> LH.full
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = loglinear : beta = 0.9 , sig2 = 0.015 , ph = 0.8 0.9 0.95 1
maxiter = 10000

Strata information:
            ph   rh    initbh |        bh anticip. mean anticip. var   Nh  nh
stratum 1 0.80 0.85   7223.01 |   5145.85       1114.07     576386.3  293  35
stratum 2 0.90 0.90  12185.72 |  11647.16       3052.88    1601273.7  663 131
stratum 3 0.95 0.90  19153.15 |  24835.86       6009.33    3802646.6  733 223
stratum 4 1.00 1.00 486367.49 | 486367.49      16108.59  134470871.3  311 311
Total                                                                2000 700
            fh
stratum 1 0.12
stratum 2 0.20
stratum 3 0.30
stratum 4 1.00
Total     0.35

Total sample size: 700 
Anticipated population mean: 5882.546 
Anticipated CV: 0.009983259 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> aRRMSE.LH.full<-var.strata(LH.full,rh=c(0.85,0.9,0.9,1),model="loglinear",
+            model.control=list(beta=0.9,sig2=0.015,ph=c(0.8,0.9,0.95,1)))
> aRRMSE.LH.full$RRMSE
[1] 0.009983259
> 
> 
> 
> cleanEx()
> nameEx("SHS")
> ### * SHS
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SHS
> ### Title: Data from the 2001 Survey of Household Spending (SHS),
> ###   Statistics Canada
> ### Aliases: SHS
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(SHS)
> 
> # Estimation of the response rate
> X<-SHS$HHINCTOT[SHS$HHINCTOT>0]
> Y<-SHS$M101[SHS$HHINCTOT>0]
> Y[Y<0]<-0
> p<-sum(Y>0)/length(Y)
> 
> # Study of the relationship between X and Y for the active units
> Xactive<-SHS$HHINCTOT[SHS$HHINCTOT>0&SHS$M101>0]
> Yactive<-SHS$M101[SHS$HHINCTOT>0&SHS$M101>0]
> plot(log(Xactive),log(Yactive))
> # Extreme values are omitted for a more robust estimation
> keep<-Xactive/Yactive>quantile(Xactive/Yactive,0.01)&
+       Xactive/Yactive<quantile(Xactive/Yactive,0.99)    
> plot(log(Xactive)[keep],log(Yactive)[keep])
> reg<-lm( log(Yactive)[keep]~log(Xactive)[keep] )
> summary(reg)

Call:
lm(formula = log(Yactive)[keep] ~ log(Xactive)[keep])

Residuals:
     Min       1Q   Median       3Q      Max 
-3.06108 -0.48655  0.03558  0.54333  2.16831 

Coefficients:
                    Estimate Std. Error t value Pr(>|t|)    
(Intercept)        -3.085463   0.091929  -33.56   <2e-16 ***
log(Xactive)[keep]  0.999231   0.008635  115.72   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.8264 on 15289 degrees of freedom
Multiple R-squared: 0.4669,	Adjusted R-squared: 0.4669 
F-statistic: 1.339e+04 on 1 and 15289 DF,  p-value: < 2.2e-16 

> 
> # Stratification assuming X=Y
> nomodel<-strata.LH(x=X,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),takeall=0,model="none")
> nomodel
Given arguments:
x = X
CV = 0.05 , Ls = 3, takenone = 0, takeall = 0
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          rh initbh |     bh anticip. mean anticip. var    Nh nh   fh
stratum 1  1  29000 |  42500      23449.46    107893922  8009 13 0.00
stratum 2  1  59000 |  93500      63561.58    195963075  5976 13 0.00
stratum 3  1 690001 | 690001     131192.16   2421061115  2040 16 0.01
Total                                                   16025 42 0.00

Total sample size: 42 
Anticipated population mean: 52123.73 
Anticipated CV: 0.04926653 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> var.strata(nomodel,y=Y) # The target CV is far from being reached
Given arguments:
strata = nomodel
y = Y
rh.postcorr = FALSE

Strata information:
          rh    Nh nh   fh | anticip. mean anticip. var
stratum 1  1  8009 13 0.00 |       1516.77      4561332
stratum 2  1  5976 13 0.00 |       4064.55     17225349
stratum 3  1  2040 16 0.01 |       7512.77     41588586
Total        16025 42 0.00                             

Total sample size: 42 
Anticipated population mean: 3230.176 
Anticipated CV: 0.1732431 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> # Stratification taking into account a loglinear model with mortality 
> # between X and Y, using the estimated parameters values
> model<-strata.LH(x=X,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),takeall=0,model="loglinear",
+        model.control=list(beta=reg$coef[2],sig2=summary(reg)$sigma^2,ph=0.97))
> model
Given arguments:
x = X
CV = 0.05 , Ls = 3, takenone = 0, takeall = 0
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = loglinear : beta = 0.9992315 , sig2 = 0.683016 , ph = 0.97 0.97 0.97
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
            ph rh initbh |     bh anticip. mean anticip. var    Nh  nh   fh
stratum 1 0.97  1  29000 |  38500      20848.40    613916140  7247  97 0.01
stratum 2 0.97  1  59000 |  93500      58621.21   4006374622  6738 229 0.03
stratum 3 0.97  1 690001 | 690001     126103.98  21111076268  2040 159 0.08
Total                                                        16025 485 0.03

Total sample size: 485 
Anticipated population mean: 50129.81 
Anticipated CV: 0.04986619 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> var.strata(model,y=Y) # The target CV is reached
Given arguments:
strata = model
y = Y
rh.postcorr = FALSE

Strata information:
          rh    Nh  nh   fh | anticip. mean anticip. var
stratum 1  1  7247  97 0.01 |       1400.86      4029177
stratum 2  1  6738 229 0.03 |       3901.08     16423224
stratum 3  1  2040 159 0.08 |       7512.77     41588586
Total        16025 485 0.03                             

Total sample size: 485 
Anticipated population mean: 3230.176 
Anticipated CV: 0.04849453 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> 
> 
> cleanEx()
> nameEx("Sweden")
> ### * Sweden
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Sweden
> ### Title: The MU284 Population of Sweden Municipalities from Sarndal et
> ###   al. (1992)
> ### Aliases: Sweden
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Sweden)
> X<-Sweden$REV84
> Y<-Sweden$RMT85
> 
> # Study of the relationship between X and Y
> plot(log(X),log(Y))
> # Extreme values are omitted for a more robust estimation
> keep<-X/Y>quantile(X/Y,0.03)&X/Y<quantile(X/Y,0.97)
> plot(log(X)[keep],log(Y)[keep])
> reg<-lm( log(Y)[keep]~log(X)[keep] )
> summary(reg)

Call:
lm(formula = log(Y)[keep] ~ log(X)[keep])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.84984 -0.10637  0.04057  0.16796  0.48769 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  -3.15302    0.15698  -20.09   <2e-16 ***
log(X)[keep]  1.05836    0.02067   51.20   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.2568 on 264 degrees of freedom
Multiple R-squared: 0.9085,	Adjusted R-squared: 0.9082 
F-statistic:  2622 on 1 and 264 DF,  p-value: < 2.2e-16 

> 
> # Stratification assuming X=Y
> nomodel<-strata.LH(x=X,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),takeall=1,model="none")
> nomodel
Given arguments:
x = X
CV = 0.05 , Ls = 3, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          rh   initbh |    bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1  1321.00 |  2809       1430.61     386995.4 192 13 0.07
stratum 2  1  2706.33 |  8375       4671.08    2234936.7  77 13 0.17
stratum 3  1 59878.00 | 59878      16177.80  189197136.0  15 15 1.00
Total                                                    284 41 0.14

Total sample size: 41 
Anticipated population mean: 3088.088 
Anticipated CV: 0.04931156 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> var.strata(nomodel,y=Y) # The target CV is not reached
Given arguments:
strata = nomodel
y = Y
rh.postcorr = FALSE

Strata information:
          rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1 192 13 0.07 |         95.41      2690.79
stratum 2  1  77 13 0.17 |        329.70     25993.38
stratum 3  1  15 15 1.00 |       1726.67   4022741.42
Total        284 41 0.14                             

Total sample size: 41 
Anticipated population mean: 245.0880 
Anticipated CV: 0.05917845 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> # Stratification taking into account a loglinear model between X and Y, 
> # using the estimated parameters values
> model<-strata.LH(x=X,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),takeall=1,model="loglinear",
+        model.control=list(beta=reg$coef[2],sig2=summary(reg)$sigma^2,ph=1))
> model
Given arguments:
x = X
CV = 0.05 , Ls = 3, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = loglinear : beta = 1.058355 , sig2 = 0.06593083 , ph = 1 1 1
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          ph rh   initbh |    bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1  1  1321.00 |  2763       2187.25      1388449 191 17 0.09
stratum 2  1  1  2706.33 |  7850       7553.66     10766246  77 20 0.26
stratum 3  1  1 59878.00 | 59878      27963.55    773675582  16 16 1.00
Total                                                       284 53 0.19

Total sample size: 53 
Anticipated population mean: 5094.417 
Anticipated CV: 0.0492482 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> var.strata(model,y=Y) # The target CV is reached
Given arguments:
strata = model
y = Y
rh.postcorr = FALSE

Strata information:
          rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1 191 17 0.09 |         95.27      2701.16
stratum 2  1  77 20 0.26 |        327.52     26528.41
stratum 3  1  16 16 1.00 |       1636.88   3892258.23
Total        284 53 0.19                             

Total sample size: 53 
Anticipated population mean: 245.0880 
Anticipated CV: 0.04787021 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> 
> 
> cleanEx()
> nameEx("strata.LH")
> ### * strata.LH
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: strata.LH
> ### Title: Generalized Lavallee-Hidiroglou Method of Strata Construction
> ### Aliases: strata.LH
> ### Keywords: survey
> 
> ### ** Examples
> 
> #########################################################
> ### Sethi's algorithm versus Kozak's algorithm
> 
> # LACK OF CONVERGENCE
> # Here is an example of numerical difficulties met with Sethi but not with Kozak  
> data(UScities)
> Sethi<-strata.LH(x=UScities,CV=0.01,Ls=3,alloc=c(0.35,0.35,0),takenone=0,takeall=1,
+        rh=1,model="loglinear",model.control=list(beta=1,sig2=0.5,ph=0.85),algo="Sethi",
+ 	   algo.control=list(maxiter=20))
Warning in strata.LH(x = UScities, CV = 0.01, Ls = 3, alloc = c(0.35, 0.35,  :
  the algorithm did not converge: the maximum number of iterations was reached
> Sethi
Given arguments:
x = UScities
CV = 0.01 , Ls = 3, takenone = 0, takeall = 1
allocation : q1 = 0.35 , q2 = 0.35 , q3 = 0
model = loglinear : beta = 1 , sig2 = 0.5 , ph = 0.85 0.85 0.85
maxiter = 20

Strata information:
            ph rh initbh |     bh anticip. mean anticip. var   Nh  nh   fh
stratum 1 0.85  1     18 |  16.04         11.10       121.78  274 149 0.54
stratum 2 0.85  1     27 |  26.65         18.27       325.49  382 266 0.70
stratum 3 0.85  1    199 | 199.00         49.01      4319.15  382 382 1.00
Total                                                        1038 797 0.77

Total sample size: 797 
Anticipated population mean: 27.68805 
Anticipated CV: 0.00997676 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.

Warning : The algorithm did not converge.
> Sethi$iter.detail[1:5,]
        b1       b2        n iter run
1 18.00000 27.00000 793.7493    0   1
2 18.70931 23.73913 794.7862    1   1
3 16.03996 26.64785 796.2548    2   1
4 18.71450 23.19959 794.7862    3   1
5 16.03996 26.64785 796.2548    4   1
> Kozak<-strata.LH(x=UScities,CV=0.01,Ls=3,alloc=c(0.35,0.35,0),takenone=0,takeall=1,
+        rh=1,model="loglinear",model.control=list(beta=1,sig2=0.5,ph=0.85),algo="Kozak")
> Kozak
Given arguments:
x = UScities
CV = 0.01 , Ls = 3, takenone = 0, takeall = 1
allocation : q1 = 0.35 , q2 = 0.35 , q3 = 0
model = loglinear : beta = 1 , sig2 = 0.5 , ph = 0.85 0.85 0.85
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
            ph rh initbh |    bh anticip. mean anticip. var   Nh  nh   fh
stratum 1 0.85  1     18 |  18.5         12.06       146.69  364 181 0.50
stratum 2 0.85  1     27 |  25.5         18.86       339.66  254 192 0.76
stratum 3 0.85  1    199 | 199.0         46.58      4029.49  420 420 1.00
Total                                                       1038 793 0.76

Total sample size: 793 
Anticipated population mean: 27.68805 
Anticipated CV: 0.009954096 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> Kozak$iter.detail[Kozak$iter.detail[,"rep"]==Kozak$rep.min,]
    b1   b2     opti step iter run rep
1 17.5 26.5 793.7493    0    0   1   1
2 19.5 26.5 793.0175    2    1   1   1
3 18.5 26.5 792.2514   -1    4   1   1
4 18.5 25.5 791.7304   -1   16   1   1
> # Looking at the iteration history for the optimization with Sethi and Kozak, 
> # we see that the initial boundaries are very close from the optimal ones. 
> # Kozak reaches very quickly a minimum. However, Sethi increases n instead of 
> # minimizing it and afterwards it oscillates between two sets of boundaries 
> # without converging.
> 
> # LOCAL MINIMUM
> # In this example, Sethi's algorithm obviously reaches a local minimum since Kozak 
> # proposes a much smaller n.
> data(UScities)
> Sethi<-strata.LH(x=UScities,CV=0.01,Ls=4,alloc=c(0.5,0,0),takenone=0,takeall=1,rh=0.85,
+        model="loglinear",model.control=list(beta=1.1,sig2=0,ph=1),algo="Sethi")
> Kozak<-strata.LH(x=UScities,CV=0.01,Ls=4,alloc=c(0.5,0,0),takenone=0,takeall=1,rh=0.85,
+        model="loglinear",model.control=list(beta=1.1,sig2=0,ph=1),algo="Kozak")
> 
> #########################################################
> ### Initial boundaries
> 
> # Sometimes some initial boundaries are better than others. 
> # In the following example, Kozak's algorithm reaches a local minimum with the 
> # geometric initial boundaries. Initial boundaries forming strata of equal sizes
> # (default) allow to reach a much smaller n. 
> data(Debtors)
> default<-strata.LH(x=Debtors,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takenone=0,takeall=1,
+         rh=1,model="loglinear",model.control=list(beta=1,sig2=0.05,ph=0.85),algo="Kozak")
> initbh<-strata.geo(x=Debtors,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),rh=1,model="loglinear",
+         model.control=list(beta=1,sig2=0.05,ph=0.85))$bh
> geo<-strata.LH(x=Debtors,initbh=initbh,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),
+         takenone=0,takeall=1,rh=1,model="loglinear",model.control=list(beta=1,
+ 		sig2=0.05,ph=0.85),algo="Kozak")
> 
> 
> #########################################################
> ### Take-none stratum
> 
> # As illustrated in the following example, it is sometimes beneficial to include a
> # take-none stratum in the stratified design (possibly with a bias penalty lower than 1).
> data(Debtors)
> sans<-strata.LH(x=Debtors,CV=0.05,Ls=3,alloc=c(0.35,0.35,0),takenone=0,
+       takeall=1,rh=c(0.8,0.9,1),model="loglinear",model.control=list(beta=1.1,
+       sig2=0,ph=1,ptakenone=1),algo="Kozak")
> avec<-strata.LH(x=Debtors,CV=0.05,Ls=3,alloc=c(0.35,0.35,0),takenone=1,
+       takeall=1,rh=c(0.8,0.9,1),model="loglinear",model.control=list(beta=1.1,
+       sig2=0,ph=1,ptakenone=1),algo="Kozak")
> avec0.5<-strata.LH(x=Debtors,CV=0.05,Ls=3,alloc=c(0.35,0.35,0),takenone=1,
+       bias.penalty=0.5,takeall=1,rh=c(0.8,0.9,1),model="loglinear",
+       model.control=list(beta=1.1,sig2=0,ph=1,ptakenone=1),algo="Kozak")
> 
> # Note: Sethi does not converge here. This occurs often with a take-none stratum.
> avec.Sethi<-strata.LH(x=Debtors,CV=0.05,Ls=3,alloc=c(0.35,0.35,0),takenone=1,
+       takeall=1,rh=c(0.8,0.9,1),model="loglinear",model.control=list(beta=1.1,
+       sig2=0,ph=1,ptakenone=1),algo="Sethi")
Warning in strata.LH(x = Debtors, CV = 0.05, Ls = 3, alloc = c(0.35, 0.35,  :
  The algorithm did not converge: square root of a negative number (negative discriminant). Other intial boundaries could solve the problem.
> 
> 
> #########################################################
> ### Automatic detection of a take-all stratum
> 
> # As in the following example, a beneficial take-all stratum is not always 
> # detected by the algorithm. Therefore, it is often a good idea to obtain a
> # stratified design with and without a take-all stratum and to compare 
> # the results.
> data(UScities)
> sans<-strata.LH(x=UScities,CV=0.01,Ls=3,alloc=c(0.35,0.35,0),takenone=0,takeall=0,
+       rh=1,model="loglinear",model.control=list(beta=0.9,sig2=0,ph=1),algo="Kozak")
> sans
Given arguments:
x = UScities
CV = 0.01 , Ls = 3, takenone = 0, takeall = 0
allocation : q1 = 0.35 , q2 = 0.35 , q3 = 0
model = loglinear : beta = 0.9 , sig2 = 0 , ph = 1 1 1
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          ph rh initbh |    bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1  1     18 |  23.5         12.37         7.44  537  97 0.18
stratum 2  1  1     27 |  55.5         22.72        28.61  368 114 0.31
stratum 3  1  1    199 | 199.0         61.96       476.04  133 112 0.84
Total                                                     1038 323 0.31

Total sample size: 323 
Anticipated population mean: 22.39682 
Anticipated CV: 0.009945555 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> avec<-strata.LH(x=UScities,CV=0.01,Ls=3,alloc=c(0.35,0.35,0),takenone=0,takeall=1,
+       rh=1,model="loglinear",model.control=list(beta=0.9,sig2=0,ph=1),algo="Kozak")
> avec
Given arguments:
x = UScities
CV = 0.01 , Ls = 3, takenone = 0, takeall = 1
allocation : q1 = 0.35 , q2 = 0.35 , q3 = 0
model = loglinear : beta = 0.9 , sig2 = 0 , ph = 1 1 1
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          ph rh initbh |    bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1  1     18 |  20.5         11.46         4.74  434  38 0.09
stratum 2  1  1     27 |  42.5         19.67        11.55  412  53 0.13
stratum 3  1  1    199 | 199.0         52.99       512.72  192 192 1.00
Total                                                     1038 283 0.27

Total sample size: 283 
Anticipated population mean: 22.39682 
Anticipated CV: 0.009968023 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> 
> #########################################################
> ### Models for the discrepancy between Y and X
> 
> data(Sweden)
> 
> # LOGLINEAR MODEL WITH MORTALITY: see help(Sweden)
> 
> # HETEROSCEDASTIC LINEAR MODEL:  We fix gamma=2.
> beta.lin<-mean(Sweden$RMT85/Sweden$REV84)
> sig2.lin<-var(Sweden$RMT85/Sweden$REV84)
> strata.LH(x=Sweden$REV84,CV=0.05,Ls=5,alloc=c(0.5,0,0.5),takeall=1,
+        model="linear",model.control=list(beta=beta.lin,sig2=sig2.lin,gamma=2),
+        algo="Kozak",algo.control=list(method="modified"))
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = linear : beta = 0.06883293 , sig2 = 0.0004495937 , gamma = 2
method = modified , minNh = 2 , maxiter = 3000 , maxstep = 3

Strata information:
          rh  initbh |      bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1   995.0 |  1265.0         60.43       640.12  87  4 0.05
stratum 2  1  1463.6 |  2323.0        117.11      1812.10  81  6 0.07
stratum 3  1  2384.4 |  4530.5        214.32      6154.38  65  9 0.14
stratum 4  1  4021.6 | 10259.5        443.44     28920.34  41 12 0.29
stratum 5  1 59878.0 | 59878.0       1351.28   1459536.60  10 10 1.00
Total                                                     284 41 0.14

Total sample size: 41 
Anticipated population mean: 212.5621 
Anticipated CV: 0.04785284 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> # Verification of equation 3.6 of Rivest (2002)
> beta.log<-1
> sig2.log<-log(1+sig2.lin/beta.lin^2)
> strata.LH(x=Sweden$REV84,CV=0.05,Ls=5,alloc=c(0.5,0,0.5),takeall=1,
+        model="loglinear",model.control=list(beta=beta.log,sig2=sig2.log,ph=1),
+        algo="Kozak",algo.control=list(method="modified"))
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = loglinear : beta = 1 , sig2 = 0.09065537 , ph = 1 1 1 1 1
method = modified , minNh = 2 , maxiter = 3000 , maxstep = 3

Strata information:
          ph rh  initbh |      bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1  1   995.0 |  1265.0        877.89     135103.9  87  4 0.05
stratum 2  1  1  1463.6 |  2323.0       1701.32     382463.5  81  6 0.07
stratum 3  1  1  2384.4 |  4530.5       3113.66    1298948.0  65  9 0.14
stratum 4  1  1  4021.6 | 10259.5       6442.27    6103949.5  41 12 0.29
stratum 5  1  1 59878.0 | 59878.0      19631.30  308050935.2  10 10 1.00
Total                                                        284 41 0.14

Total sample size: 41 
Anticipated population mean: 3088.088 
Anticipated CV: 0.04785284 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> # The two models give the same stratified design.
> 
> # RANDOM REPLACEMENT MODEL: example in Rivest (1999)
> strata.LH(x=Sweden$REV84,CV=0.05,Ls=5,alloc=c(0.5,0,0.5),takeall=1,
+        model="none",algo="Sethi")     # Table 1 with a different rounding of the nh's
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
maxiter = 10000

Strata information:
          rh  initbh |       bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1   995.0 |  1273.36        877.89     56601.57  87  2 0.02
stratum 2  1  1463.6 |  2336.36       1701.32     98457.63  81  3 0.04
stratum 3  1  2384.4 |  4618.86       3113.66    346138.84  65  4 0.06
stratum 4  1  4021.6 | 11775.79       6920.83   3643640.27  46  8 0.17
stratum 5  1 59878.0 | 59878.00      28417.60 341481475.04   5  5 1.00
Total                                                      284 22 0.08

Total sample size: 22 
Anticipated population mean: 3088.088 
Anticipated CV: 0.04497594 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> e0<-strata.LH(x=Sweden$REV84,CV=0.05,Ls=5,alloc=c(0.5,0,0.5),takeall=1,
+        model="none",algo="Kozak")
> e0                                    # Better than Sethi
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          rh  initbh |      bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1   995.0 |  1683.0       1065.08     113380.5 130  4 0.03
stratum 2  1  1463.6 |  3174.0       2334.18     160665.9  76  3 0.04
stratum 3  1  2384.4 |  5509.5       4117.12     399935.3  40  2 0.05
stratum 4  1  4021.6 | 12658.5       7838.18    3332149.1  34  5 0.15
stratum 5  1 59878.0 | 59878.0      32494.00  343766659.0   4  4 1.00
Total                                                     284 18 0.06

Total sample size: 18 
Anticipated population mean: 3088.088 
Anticipated CV: 0.04732249 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> var.strata(e0,y=Sweden$RMT85)
Given arguments:
strata = e0
y = Sweden$RMT85
rh.postcorr = FALSE

Strata information:
          rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1 130  4 0.03 |         71.16       732.87
stratum 2  1  76  3 0.04 |        157.32      3297.72
stratum 3  1  40  2 0.05 |        289.60     13261.09
stratum 4  1  34  5 0.15 |        561.26     63373.02
stratum 5  1   4  4 1.00 |       4432.75   4866262.19
Total        284 18 0.06                             

Total sample size: 18 
Anticipated population mean: 245.0880 
Anticipated CV: 0.0808574 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> e0.001<-strata.LH(x=Sweden$REV84,CV=0.05,Ls=5,alloc=c(0.5,0,0.5),takeall=1,
+        model="random",model.control=list(epsilon=0.011),algo="Kozak")
> e0.001                         # Table 2 part 3 with a different rounding of the nh's
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 5, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = random : epsilon = 0.011
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          rh  initbh |      bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1   995.0 |  1707.5       1092.09     405485.3 131  9 0.07
stratum 2  1  1463.6 |  3174.0       2350.89     408533.8  75  6 0.08
stratum 3  1  2384.4 |  5509.5       4105.81     653970.3  40  4 0.10
stratum 4  1  4021.6 | 11619.0       7657.84    3310535.4  33  7 0.21
stratum 5  1 59878.0 | 59878.0      28138.98  344951887.4   5  5 1.00
Total                                                     284 31 0.11

Total sample size: 31 
Anticipated population mean: 3088.088 
Anticipated CV: 0.04720077 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> var.strata(e0.001,y=Sweden$RMT85)
Given arguments:
strata = e0.001
y = Sweden$RMT85
rh.postcorr = FALSE

Strata information:
          rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1 131  9 0.07 |         71.40       734.96
stratum 2  1  75  6 0.08 |        158.04      3301.83
stratum 3  1  40  4 0.10 |        289.60     13261.09
stratum 4  1  33  7 0.21 |        547.73     59062.50
stratum 5  1   5  5 1.00 |       3747.80   5769635.76
Total        284 31 0.11                             

Total sample size: 31 
Anticipated population mean: 245.0880 
Anticipated CV: 0.05776504 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> 
> 
> 
> cleanEx()
> nameEx("strata.bh")
> ### * strata.bh
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: strata.bh
> ### Title: Stratification of a Population Given a Set of Boundaries
> ### Aliases: strata.bh
> ### Keywords: survey
> 
> ### ** Examples
> 
> data(USbanks)
> adjust<-strata.geo(x=USbanks,CV=0.01,Ls=4,alloc=c(0.35,0.35,0))
> adjust
Given arguments:
x = USbanks
CV = 0.01 , Ls = 4
allocation : q1 = 0.35 , q2 = 0.35 , q3 = 0
model = none

Strata information:
          rh |     bh anticip. mean anticip. var  Nh  nh   fh
stratum 1  1 | 135.30        103.26       382.33 156  33 0.21
stratum 2  1 | 261.51        178.28      1136.94 109  37 0.34
stratum 3  1 | 505.47        371.86      5350.88  63  42 0.67
stratum 4  1 | 978.00        744.10     23105.75  29  29 1.00
Total                                            357 141 0.39

Total sample size: 141 
Anticipated population mean: 225.6246 
Anticipated CV: 0.009869827 
> adjust$nh.nonint
[1] 32.05732 36.55587 41.66591 29.00000
> noadjust<-strata.bh(x=USbanks,bh=adjust$bh,CV=0.01,Ls=4,
+           alloc=c(0.35,0.35,0),takeall=0,takeall.adjust=FALSE)
> noadjust
Given arguments:
x = USbanks
CV = 0.01 , Ls = 4, takenone = 0, takeall = 0
allocation : q1 = 0.35 , q2 = 0.35 , q3 = 0
model = none

Strata information:
          rh     bh | anticip. mean anticip. var  Nh  nh   fh
stratum 1  1 135.30 |        103.26       382.33 156  29 0.19
stratum 2  1 261.51 |        178.28      1136.94 109  34 0.31
stratum 3  1 505.47 |        371.86      5350.88  63  38 0.60
stratum 4  1 978.00 |        744.10     23105.75  29  29 1.00
Total                                            357 130 0.36

Total sample size: 130 
Anticipated population mean: 225.6246 
Anticipated CV: 0.01079707 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> noadjust$nh.nonint
[1] 28.98880 33.05675 37.67766 35.57166
> # without the adjustment for a take-all stratum, n is smaller than
> # with the adjustment, but the target CV is not reached.
> 
> 
> 
> cleanEx()
> nameEx("strata.rule")
> ### * strata.rule
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: strata.rule
> ### Title: Non-Iterative Methods of Strata Construction
> ### Aliases: strata.cumrootf strata.geo
> ### Keywords: survey
> 
> ### ** Examples
> 
> ### Example for strata.cumrootf
> data(MRTS)
> res<-NULL
> for ( n in seq(100,1500,10)){
+     cum<-strata.cumrootf(x=MRTS,nclass=n,CV=0.01,Ls=4,alloc=c(0.5,0,0.5))
+     res<-rbind(res,c(n,cum$n))
+ }
> plot(res,ylab="suggested sample size n",xlab="number of classes",main=expression(
+      paste("Example of the effect of nclass on n for the cum",sqrt(f)," method")))
> 
> ### Example for strata.geo
> data(Sweden)
> strata.geo(x=Sweden$REV84,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),model="none")
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 3
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |       bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1 |  1931.85       1140.42     151343.2 145  8 0.06
stratum 2  1 | 10755.15       4097.22    4343211.7 131 36 0.27
stratum 3  1 | 59878.00      21865.00  284993246.2   8  8 1.00
Total                                              284 52 0.18

Total sample size: 52 
Anticipated population mean: 3088.088 
Anticipated CV: 0.04940268 
> strata.geo(x=Sweden$REV84,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),model="loglinear",
+        model.control=list(beta=1.058355,sig2=0.06593083,ph=1))
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 3
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = loglinear : beta = 1.058355 , sig2 = 0.06593083 , ph = 1 1 1

Strata information:
          ph rh |       bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1  1 |  1931.85       1726.13     613307.4 145 10 0.07
stratum 2  1  1 | 10755.15       6705.06   17119756.6 131 47 0.36
stratum 3  1  1 | 59878.00      39769.84 1248143275.1   8  8 1.00
Total                                                 284 65 0.23

Total sample size: 65 
Anticipated population mean: 5094.404 
Anticipated CV: 0.04988332 
> strata.geo(x=Sweden$REV84,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),rh=0.85,
+        model="loglinear",model.control=list(beta=1.058355,sig2=0.06593083,ph=1))
Given arguments:
x = Sweden$REV84
CV = 0.05 , Ls = 3
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = loglinear : beta = 1.058355 , sig2 = 0.06593083 , ph = 1 1 1

Strata information:
          ph   rh |       bh anticip. mean anticip. var  Nh nh   fh
stratum 1  1 0.85 |  1931.85       1726.13     613307.4 145 16 0.11
stratum 2  1 0.85 | 10755.15       6705.06   17119756.6 131 73 0.56
stratum 3  1 0.85 | 59878.00      39769.84 1248143275.1   8  8 1.00
Total                                                   284 97 0.34

Total sample size: 97 
Anticipated population mean: 5094.404 
Anticipated CV: 0.04942449 
> # When non-response or a model is added, the stratum boundaries do not change, 
> # only the nh's do.
> 
> 
> 
> cleanEx()
> nameEx("strata.tool")
> ### * strata.tool
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: strata.tool
> ### Title: Functions to Visualize Stratified Designs
> ### Aliases: print.strata plot.strata
> ### Keywords: methods
> 
> ### ** Examples
> 
> data(MRTS)
> cumrootf<-strata.cumrootf(x=MRTS,nclass=500,CV=0.01,Ls=4,alloc=c(0.5,0,0.5))
> print(cumrootf)
Given arguments:
x = MRTS
nclass = 500 , CV = 0.01 , Ls = 4
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |   9865.74       5890.56      6376633  778  87 0.11
stratum 2  1 |  19590.24      14144.66      7508233  742  90 0.12
stratum 3  1 |  40984.15      26480.44     31329795  355  88 0.25
stratum 4  1 | 486367.49      74294.75   2916366192  125 125 1.00
Total                                               2000 390 0.20

Total sample size: 390 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009977894 
> plot(cumrootf)
> plot(cumrootf,drop=5)
> plot(cumrootf,logscale=TRUE)
> geo<-strata.geo(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5))
> print(geo)
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none

Strata information:
          rh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1 |   1081.91        648.10 7.312548e+04   25   1 0.04
stratum 2  1 |   8288.00       5212.28 3.891455e+06  587  67 0.11
stratum 3  1 |  63490.22      18932.90 1.133011e+08 1343 824 0.61
stratum 4  1 | 486367.49     116953.15 5.182641e+09   45  45 1.00
Total                                               2000 937 0.47

Total sample size: 937 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009982524 
> plot(geo,logscale=TRUE)
> # The geometric method does not perform well because of some small units
> LH<-strata.LH(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takeall=1)
> print(LH)
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          rh    initbh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1   7223.01 |   9776.90       5870.27      6329442  774  77 0.10
stratum 2  1  12185.72 |  18176.38      13628.94      5797692  675  65 0.10
stratum 3  1  19153.15 |  33560.07      23555.62     16343023  374  60 0.16
stratum 4  1 486367.49 | 486367.49      63348.42   2348818733  177 177 1.00
Total                                                         2000 379 0.19

Total sample size: 379 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009958147 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> plot(LH,logscale=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("var.strata")
> ### * var.strata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: var.strata
> ### Title: Anticipated Variances and RRMSE from a Stratified Design for a
> ###   Survey Variable Y
> ### Aliases: var.strata print.var.strata
> ### Keywords: survey
> 
> ### ** Examples
> 
> data(Sweden)
> nomodel<-strata.LH(x=Sweden$REV84,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),
+          takeall=1,model="none")
> # We can give a vector of the Y values for every unit in the population
> var.strata(nomodel,y=Sweden$RMT85) 
Given arguments:
strata = nomodel
y = Sweden$RMT85
rh.postcorr = FALSE

Strata information:
          rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1 192 13 0.07 |         95.41      2690.79
stratum 2  1  77 13 0.17 |        329.70     25993.38
stratum 3  1  15 15 1.00 |       1726.67   4022741.42
Total        284 41 0.14                             

Total sample size: 41 
Anticipated population mean: 245.0880 
Anticipated CV: 0.05917845 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> # Or specify a model between X and Y
> var.strata(nomodel,model="loglinear",model.control=list(beta=1.058355,
+          sig2=0.06593083,ph=1))
Given arguments:
strata = nomodel
rh.postcorr = FALSE
model = loglinear : beta = 1.058355

Strata information:
          ph rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1  1 192 13 0.07 |       2198.89      1414045
stratum 2  1  1  77 13 0.17 |       7671.51     11227892
stratum 3  1  1  15 15 1.00 |      28927.81    809541393
Total           284 41 0.14                             

Total sample size: 41 
Anticipated population mean: 5094.404 
Anticipated CV: 0.06179949 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> # Compared to taking into account the model in the optimization
> model<-strata.LH(x=Sweden$REV84,CV=0.05,Ls=3,alloc=c(0.5,0,0.5),
+          takeall=1,model="loglinear",model.control=list(beta=1.058355,
+ 		 sig2=0.06593083,ph=1))
> var.strata(model,y=Sweden$RMT85)
Given arguments:
strata = model
y = Sweden$RMT85
rh.postcorr = FALSE

Strata information:
          rh  Nh nh   fh | anticip. mean anticip. var
stratum 1  1 191 17 0.09 |         95.27      2701.16
stratum 2  1  77 20 0.26 |        327.52     26528.41
stratum 3  1  16 16 1.00 |       1636.88   3892258.23
Total        284 53 0.19                             

Total sample size: 53 
Anticipated population mean: 245.0880 
Anticipated CV: 0.04787021 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> ### Examples of posterior correction for non-response
> data(MRTS)
> LH<-strata.LH(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takeall=1)
> LH
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
          rh    initbh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1  1   7223.01 |   9776.90       5870.27      6329442  774  77 0.10
stratum 2  1  12185.72 |  18176.38      13628.94      5797692  675  65 0.10
stratum 3  1  19153.15 |  33560.07      23555.62     16343023  374  60 0.16
stratum 4  1 486367.49 | 486367.49      63348.42   2348818733  177 177 1.00
Total                                                         2000 379 0.19

Total sample size: 379 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009958147 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> # Without non-response in the take-all strata
> var.strata(LH,rh.postcorr=TRUE,rh=c(0.85,0.9,0.9,1))
Given arguments:
strata = LH
rh.postcorr = TRUE
model = none

Strata information:
            rh   Nh  nh   fh | anticip. mean anticip. var
stratum 1 0.85  774  91 0.12 |       5870.27      6329442
stratum 2 0.90  675  73 0.11 |      13628.94      5797692
stratum 3 0.90  374  67 0.18 |      23555.62     16343023
stratum 4 1.00  177 177 1.00 |      63348.42   2348818733
Total          2000 408 0.20                             

Total sample size: 408 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009920847 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> strata.LH(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takeall=1,rh=c(0.85,0.9,0.9,1))
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
            rh    initbh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1 0.85   7223.01 |   8944.17       5366.30      5232261  676  68 0.10
stratum 2 0.90  12185.72 |  17013.85      12612.62      5500098  699  72 0.10
stratum 3 0.90  19153.15 |  31809.94      22286.54     16233293  436  77 0.18
stratum 4 1.00 486367.49 | 486367.49      61401.18   2255633205  189 189 1.00
Total                                                           2000 406 0.20

Total sample size: 406 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009951515 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> # With non-response in the take-all strata
> var.strata(LH,rh.postcorr=TRUE,rh=0.9)
Given arguments:
strata = LH
rh.postcorr = TRUE
model = none

Strata information:
           rh   Nh  nh   fh | anticip. mean anticip. var
stratum 1 0.9  774  86 0.11 |       5870.27      6329442
stratum 2 0.9  675  73 0.11 |      13628.94      5797692
stratum 3 0.9  374  67 0.18 |      23555.62     16343023
stratum 4 0.9  177 177 1.00 |      63348.42   2348818733
Total         2000 403 0.20                             

Total sample size: 403 
Anticipated population mean: 16882.80 
Anticipated CV: 0.01178609 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> strata.LH(x=MRTS,CV=0.01,Ls=4,alloc=c(0.5,0,0.5),takeall=1,rh=0.9)
Given arguments:
x = MRTS
CV = 0.01 , Ls = 4, takenone = 0, takeall = 1
allocation : q1 = 0.5 , q2 = 0 , q3 = 0.5
model = none
method = original , minNh = 2 , maxiter = 10000 , maxstep = 3 , maxstill = 100 , rep = 3

Strata information:
           rh    initbh |        bh anticip. mean anticip. var   Nh  nh   fh
stratum 1 0.9   7223.01 |   9000.99       5398.03      5299662  682 106 0.16
stratum 2 0.9  12185.72 |  16845.44      12594.03      5277975  685 107 0.16
stratum 3 0.9  19153.15 |  30997.22      21976.34     14796904  434 113 0.26
stratum 4 0.9 486367.49 | 486367.49      59896.97   2185050579  199 199 1.00
Total                                                          2000 525 0.26

Total sample size: 525 
Anticipated population mean: 16882.80 
Anticipated CV: 0.009982942 
Note: CV=RRMSE (Relative Root Mean Squared Error) because takenone=0.
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  50.22 0.3 51.12 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
